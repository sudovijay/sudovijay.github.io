const CACHE_NAME="sudo-v6",HASH_KEY="8787ea6f1ccc9679ee16";let CACHE_URLS=["/","index.html","/build/images/offmp4.ecffb27a.jpg","/build/images/vijay.ef6c1bc9.jpg","/build/0-[HASH_KEY].js","/build/1-[HASH_KEY].js","/build/2-[HASH_KEY].js","/build/3-[HASH_KEY].js","/build/4-[HASH_KEY].js","/build/bundle-[HASH_KEY].js","/build/vendors~bundle-[HASH_KEY].js","/build/polyfill-[HASH_KEY].js","/build/vendors~polyfill-[HASH_KEY].js"];CACHE_URLS=CACHE_URLS.map(e=>e.replace(/\[HASH_KEY\]/gu,HASH_KEY)),self.addEventListener("install",e=>{e.waitUntil(caches.open("sudo-v6").then(e=>e.addAll(CACHE_URLS)))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>0===e.indexOf("sudo-v6")?null:caches.delete(e)))))}),self.addEventListener("fetch",e=>{const t=e.request;if("GET"!==t.method)return null;const s=new URL(e.request.url);"/"===s.pathname?e.respondWith(caches.open("sudo-v6").then(e=>e.match(t).then(s=>{return fetch(t).then(s=>(e.put(t,s.clone()),s)).catch(()=>s)||s}))):CACHE_URLS.includes(s.href)||CACHE_URLS.includes(s.pathname)?e.respondWith(caches.open("sudo-v6").then(e=>e.match(t).then(e=>e||fetch(t)))):/fonts.(googleapis|gstatic).com/.test(e.request.url)&&e.respondWith(caches.open("sudo-v6").then(e=>e.match(t).then(s=>s||fetch(t).then(s=>(e.put(t,s.clone()),s)))))});